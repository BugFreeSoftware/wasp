(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[5549],{3692:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return m},default:function(){return p}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),s=["components"],i={},c="Smart Contract Schemas for ISCP",l={unversionedId:"guide/schema/intro",id:"guide/schema/intro",isDocsHomePage:!1,title:"Smart Contract Schemas for ISCP",description:"The Iota Smart Contracts Protocol (ISCP) provides us with a very flexible way of",source:"@site/docs/guide/schema/intro.mdx",sourceDirName:"guide/schema",slug:"/guide/schema/intro",permalink:"/wasp/docs/guide/schema/intro",editUrl:"https://github.com/iotaledger/chronicle.rs/tree/main/docs/docs/guide/schema/intro.mdx",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rust/WASM Based Smart Contracts",permalink:"/wasp/docs/guide/rust_wasm/introduction"},next:{title:"Data Access Proxies",permalink:"/wasp/docs/guide/schema/proxies"}},m=[],u={toc:m};function p(e){var t=e.components,i=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"smart-contract-schemas-for-iscp"},"Smart Contract Schemas for ISCP"),(0,o.kt)("p",null,"The Iota Smart Contracts Protocol (ISCP) provides us with a very flexible way of\nprogramming smart contracts. It does this by providing an API to a sandboxed environment\nthat allows you to interact with the ISCP deterministically without any security risks.\nThe API provides a generic way to store, access, and modify the state of the smart\ncontract. The API can be used by any kind of Virtual Machine (VM) to implement a system to\nprogram, load, and run smart contracts on top of the ISCP. The actual VMs can be\nimplemented by whomever wants to create them."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Wasp node image",src:n(157).Z})),(0,o.kt)("p",null,"Of course, we are providing an example implementation of such a VM to allow anyone to get\na taste of what it is like to program a smart contract for the ISCP. Our VM implementation\nuses ",(0,o.kt)("a",{parentName:"p",href:"https://webassembly.org/"},"WebAssembly")," (Wasm) code as an intermediate compilation\ntarget. The implementation of the Wasm VM currently uses the open\nsource ",(0,o.kt)("a",{parentName:"p",href:"https://wasmtime.dev/"},"Wasmtime")," runtime environment. This enables dynamically\nloading and running of the Wasm code."),(0,o.kt)("p",null,"We chose Wasm to be able to program smart contracts from any language. Since more and more\nlanguages are becoming capable of generating the intermediate Wasm code this will\neventually allow developers to choose a language they are familiar with."),(0,o.kt)("p",null,"Because each Wasm code unit runs in its own memory space and cannot access anything\noutside that memory by design, Wasm code is ideally suited for secure smart contracts. The\nWasm runtime system will only provide access to external functionality that is needed for\nthe smart contract to be able to do their thing, but nothing more. In our case all we do\nis provide access to the ISCP host's sandbox API environment. The way we do that is by\nproviding a simple library that can be linked into the Wasm code. This library, for\nobvious reasons, has been named ",(0,o.kt)("inlineCode",{parentName:"p"},"WasmLib")," for now."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Wasm VM image",src:n(3462).Z})),(0,o.kt)("p",null,"As you can see we can have any number of smart contracts running in our Wasm VM. Each\nsmart contract is a separately compiled Wasm code unit that contains its own copy of\nWasmLib embedded into it. Each WasmLib provides the ISCP sandbox functionality to its\ncorresponding smart contract and knows how to access the underlying smart contract state\nstorage through the VM runtime system. This makes ISCP sandbox API access seamless to the\nsmart contract by hiding the details of bridging the gap between the smart contract's\nmemory space, and the ISCP host's memory space. It also prevents the smart contract from\naccessing and/or modifying the ISCP host's memory space directly."),(0,o.kt)("p",null,"The ISCP sandbox environment enables the following functionality:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Access to smart contract metadata"),(0,o.kt)("li",{parentName:"ul"},"Access to parameter data for smart contract function calls"),(0,o.kt)("li",{parentName:"ul"},"Access to the smart contract state data"),(0,o.kt)("li",{parentName:"ul"},"A way to return result data to the caller of a smart contract function"),(0,o.kt)("li",{parentName:"ul"},"Access to tokens owned by the smart contract and ability to move them"),(0,o.kt)("li",{parentName:"ul"},"Ability to call other smart contract functions"),(0,o.kt)("li",{parentName:"ul"},"Access to logging functionality"),(0,o.kt)("li",{parentName:"ul"},"Access to a number of utility functions provided by the host")),(0,o.kt)("p",null,"Our initial implementation of WasmLib has been created for the Rust programming language.\nRust had the most advanced and stable support for generating Wasm code at the time when we\nstarted implementing our Wasm VM environment. In the meantime, we also have implemented a\nfully functional TinyGo version."),(0,o.kt)("p",null,"Note that both implementations are implemented using only a very small common subset of\nthese languages. This keeps the coding style very similar, barring some syntactic\nidiosyncrasies. The reason for this is that we wanted to make it as easy as possible for\nanyone to start working with our smart contract system. If you have any previous\nexperience in any C-style language you should quickly feel comfortable writing smart\ncontracts in either language, without having to dive deeply into all aspects of the chosen\nlanguage."),(0,o.kt)("p",null,"Let's start by diving deeper into a concept that is central to WasmLib smart contract\nprogramming: proxy objects."))}p.isMDXComponent=!0},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,h=p["".concat(c,".").concat(d)]||p[d]||u[d]||o;return n?a.createElement(h,s(s({ref:t},m),{},{components:n})):a.createElement(h,s({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},157:function(e,t,n){"use strict";t.Z=n.p+"assets/images/IscpHost-2c38378f3efce33c5a99978bfd26cc46.png"},3462:function(e,t,n){"use strict";t.Z=n.p+"assets/images/WasmVM-9d5cb20cbfde79b2cca6826072145a71.png"}}]);